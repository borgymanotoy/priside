<?php
	require_once( $_SERVER['DOCUMENT_ROOT']."/libs/verify_session.php" );
	require_once( $_SERVER['DOCUMENT_ROOT']."/translations/admin_panel_cu_new.php" );

	require_once( "../libs/db_common.php" );
	
	/*
		ajax params: 
			"ajaxRequest"		 : ajaxRequest        (string)  //method that is to be executed by the php file, this the request type sent by the ajax request
			"accountType"        : accountType        (string)
			"classification"     : classification     (string)
			"serviceId"          : serviceId          (string)
			"municipalityId"     : municipalityId     (string)
			"name"               : name               (string)
			"orgNumber"          : orgNumber          (string) 
			"firstName"          : firstName          (string) 
			"lastName"           : lastName           (string)
			"personNumber"       : personNumber       (string)
			"email"              : email              (string)
			"phone"              : phone              (string)
			"altPhone"           : altPhone           (string)
			"address"            : address            (string)
			"postal"             : postal             (string)
			"city"               : city               (string)
			"accountManagerName" : accountManagerName (string) 
			"note"               : note               (string) 
			"recording"          : recording          (string) //filename for the uploaded recording
			"contract"           : contract           (string) //filename for the uploaded contract
			"checksum"           : checksum           (checksum generated by the server)
	*/
	
	//this is our save path for our uploads (recording and contract)
	//since the "CUSTOMER" doesn't exist yet, lets use the CURRENT_USER's details
	$UploadPath        = DATA_PATH."/accounts/{$_SESSION['User']['AccountId']}/logins/{$_SESSION['User']['Id']}";
	
	$RecordingFilename = "$UploadPath/myrecording"; 
	$ContractFilename  = "$UploadPath/mycontract";
	
	$SavePathRecording = base64_encode($RecordingFilename).',CheckSum='.CheckSum(base64_encode($RecordingFilename)).',Session='.session_id();
	$SavePathContract  = base64_encode($ContractFilename).',CheckSum='.CheckSum(base64_encode($ContractFilename)).',Session='.session_id();
	
	
	db_connect();
	if("createAccount" == $ajaxRequest){
		//this is a transaction
		mysql_query("BEGIN");
		
		$accountType        = utf8_decode(mysql_real_escape_string($accountType));
		$classification     = utf8_decode(mysql_real_escape_string($classification));
		$serviceId          = utf8_decode(mysql_real_escape_string($serviceId));
		$municipalityId     = utf8_decode(mysql_real_escape_string($municipalityId));
		$name               = utf8_decode(mysql_real_escape_string($name));
		$orgNumber          = utf8_decode(mysql_real_escape_string($orgNumber));
		$firstName          = utf8_decode(mysql_real_escape_string($firstName));
		$lastName           = utf8_decode(mysql_real_escape_string($lastName));
		$personNumber       = utf8_decode(mysql_real_escape_string($personNumber));
		$email              = utf8_decode(mysql_real_escape_string($email));
		$phone              = utf8_decode(mysql_real_escape_string($phone));
		$altPhone           = utf8_decode(mysql_real_escape_string($altPhone));
		$address            = utf8_decode(mysql_real_escape_string($address));
		$postal             = utf8_decode(mysql_real_escape_string($postal));
		$city               = utf8_decode(mysql_real_escape_string($city));
		$accountManagerName = utf8_decode(mysql_real_escape_string($accountManagerName));
		$note               = utf8_decode(mysql_real_escape_string($note));
		
		$recording          = utf8_decode(mysql_real_escape_string($recording));
		$contract           = utf8_decode(mysql_real_escape_string($contract));
		//create account
		$sql_account  = "
						 INSERT INTO Accounts
							(Type,Active)
							VALUES
							('$accountType',1)
						";
		$result = mysql_query($sql_account);
		if(0 != mysql_errno()){
			$ErrMsg = mysql_error()." @line:".__LINE__;
			mysql_query("ROLLBACK");
			header("Status: 400 " .$ErrMsg);
			exit(0);
		}		
		$accountId = mysql_insert_id();
		
		
		//create business
		//lets dynamically build the query for the business table
		$business_fields = "";
		$business_values = "";
		foreach($_POST as $key => $value){
			if("ajaxRequest" != $key && "accountType" != $key && "serviceId" != $key && "municipalityId" != $key && "contract" != $key && "recording" != $key && "checksum" != $key){
				if(!empty($value)){
					$business_fields.= ucwords($key).",";
					$business_values.="'".utf8_decode(mysql_real_escape_string($value))."',";
				}
			}
		}
		$business_fields = rtrim($business_fields,",");
		$business_values = rtrim($business_values,",");
		$sql_business    = "INSERT INTO Business ($business_fields,CreateDate) VALUES ($business_values,NOW())";
		$result = mysql_query($sql_business);
		if(0 != mysql_errno()){
			$ErrMsg = mysql_error()." @line:".__LINE__;
			mysql_query("ROLLBACK");
			header("Status: 400 " .$ErrMsg);
			exit(0);
		}
		$businessId = mysql_insert_id();
		
		//create new password, based on getapassword.php
		mt_srand( (double)microtime() * 1000000 );
		$r = mt_rand( 0, mt_getrandmax() ); 
		$t = time();
		$md5string = md5( $Email . $r . $t );
		$newpwd = "";
		for( $k = 0; $k < 32; $k +=4 ){
			$newpwd .= $md5string[$k];
		}
		//set the default password to "password",
		$newpwd = "password";//comment this line to generate random password
		
		//create user
		$sql_user = "
					  INSERT INTO User
						(Account_Id,Type,FirstName,LastName,Email,Phone,AltPhone,Password,Active,CreateDate)
						VALUES
						($accountId,2,'$firstName','$lastName','$email','$phone','$altPhone',MD5('$newpwd'),1,NOW())
					";
						
					
		$result = mysql_query($sql_user);
		if(0 != mysql_errno()){
			$ErrMsg = mysql_error()." @line:".__LINE__;
			mysql_query("ROLLBACK");
			header("Status: 400 " .$ErrMsg);
			exit(0);
		}
		$userId = mysql_insert_id();
		
		//update account to attach the business and the primary user
		$sql_account = "UPDATE Accounts SET Business_Id = $businessId, PrimaryUser_id = $userId WHERE Id = $accountId LIMIT 1";
		$result = mysql_query($sql_account);
		if(0 != mysql_errno()){
			$ErrMsg = mysql_error()." @line:".__LINE__;
			header("Status: 400 " .$ErrMsg);
			mysql_query("ROLLBACK");
			exit(0);
		}
		
		//create industries
		if(!empty($serviceId)){
			$services    = explode(",",$serviceId);
			$sql_service = "INSERT INTO BusinessServiceCategoryGroup (Business_Id,BusinessServiceCategory_Id) VALUES";
			foreach($services as $businessServiceCategory_Id){
				$sql_service.="($businessId,$businessServiceCategory_Id),";
			}	
			$sql_service = rtrim($sql_service,",");
			
			$result = mysql_query($sql_service);
			if(0 != mysql_errno()){
				$ErrMsg = mysql_error()." @line:".__LINE__;
				mysql_query("ROLLBACK");
				header("Status: 400 " .$ErrMsg);
				exit(0);
			}
		}
		
		//create municipalities
		if(!empty($municipalityId)){
			$municipalities   = explode(",",$municipalityId);
			$sql_municipality = "INSERT INTO BusinessServiceLanKommunerGroup (Business_Id,Sweden_LanKommuner_Id) VALUES";
			foreach($municipalities as $sweden_LanKommuner_Id){
				$sql_municipality.="($businessId,$sweden_LanKommuner_Id),";
			}	
			$sql_municipality = rtrim($sql_municipality,",");
			
			$result = mysql_query($sql_municipality);
			if(0 != mysql_errno()){
				$ErrMsg = mysql_error()." @line:".__LINE__;
				mysql_query("ROLLBACK");
				header("Status: 400 " .$ErrMsg);
				exit(0);
			}
		}

		//create the directory for the account, on fail, rollback the transaction
		if(!mkdir(DATA_PATH."/accounts/$accountId",0760)){
			$ErrMsg = "Failed to create ".DATA_PATH."/accounts/$accountId";
			mysql_query("ROLLBACK");
			header("Status: 400 " .$ErrMsg);
			exit(0);
		}
		if(!mkdir(DATA_PATH."/accounts/$accountId/logins",0760)){
			$ErrMsg = "Failed to create ".DATA_PATH."/accounts/$accountId/logins";
			mysql_query("ROLLBACK");
			header("Status: 400 " .$ErrMsg);
			exit(0);
		}
		if(!mkdir(DATA_PATH."/accounts/$accountId/logins/$userId",0760)){
			$ErrMsg = "Failed to create ".DATA_PATH."/accounts/$accountId/logins/$userId";
			mysql_query("ROLLBACK");
			header("Status: 400 " .$ErrMsg);
			exit(0);
		}
		
		
		//save the uploaded file
		$contractId = 0;
		if("" != $contract){
			if(file_exists($ContractFilename)){
				$offset = strrpos( $contract, "." );
				$ext = '';
				if( FALSE !== $offset )
					$ext = substr($contract,$offset);
				// get mime type
				$mimeType      = finfo_file(finfo_open(FILEINFO_MIME_TYPE),$ContractFilename);
				// get file size
				$fileSize      = filesize($ContractFilename);
				$sql_contract  = "INSERT INTO Files (Parent_Id,User_Id,Name,Type,Size,CreationDate) VALUES(0,$userId,'contractDocument$ext','$mimeType',$fileSize,NOW())"; 
				$result        = mysql_query($sql_contract);
				if(0 != mysql_errno()){
					$ErrMsg = mysql_error()." @line:".__LINE__;
					mysql_query("ROLLBACK");
					header("Status: 400 " .$ErrMsg);
					exit(0);
				}
				$contractId = mysql_insert_id();
			}
		}
		
		$recordingId = 0;
		if("" != $recording){
			if(file_exists($RecordingFilename)){
				$offset = strrpos( $recording, "." );
				$ext = '';
				if( FALSE !== $offset )
					$ext = substr($recording,$offset);
				// get mime type
				$mimeType      = finfo_file(finfo_open(FILEINFO_MIME_TYPE),$RecordingFilename);
				// get file size
				$fileSize      = filesize($RecordingFilename);
				$sql_recording = "INSERT INTO Files (Parent_Id,User_Id,Name,Type,Size,CreationDate) VALUES(0,$userId,'contractRecording$ext','$mimeType',$fileSize,NOW())"; 
				$result        = mysql_query($sql_recording);
				if(0 != mysql_errno()){
					$ErrMsg = mysql_error()." @line:".__LINE__;
					mysql_query("ROLLBACK");
					header("Status: 400 " .$ErrMsg);
					exit(0);
				}
				$recordingId = mysql_insert_id();
			}
		}
		
		//update account to add the uploaded files
		$sql_account = "UPDATE Accounts SET ContractFile_Id = $contractId, RecordingFile_Id = $recordingId WHERE Id = $accountId LIMIT 1";
		$result = mysql_query($sql_account);
		if(0 != mysql_errno()){
			$ErrMsg = mysql_error()." @line:".__LINE__;
			header("Status: 400 " .$ErrMsg);
			mysql_query("ROLLBACK");
			exit(0);
		}
		
		//move the uploaded files to the appropriate directory
		$Destination = DATA_PATH."/accounts/$accountId";
		
		if(0 != $contractId){
			if(file_exists($ContractFilename)){
				rename($ContractFilename,"$Destination/$contractId");
			}
		}
		
		if(0 != $recordingId){
			if(file_exists($RecordingFilename)){
				rename($RecordingFilename,"$Destination/$recordingId");
			}
		}
		
		//all transactions were successfull, commit the whole transaction
		mysql_query("COMMIT");
		print "customer was successfully created....user password is : $newpwd (create a function to send customer account details [".__FILE__." @".__LINE__."])";
		exit(0);
	}
	
	function toCheckBoxes($arr,$first = true){ 
		if($first){
			$html = "<ul style=\"margin-top:0px;margin-left:-20px;\">\n";
		}
		foreach($arr as $v){
			$html .= "<li>\n";
			$html .= "<input class=\"priside-checkbox\" type=\"checkbox\" id=\"servicesAdminPanelCuNew_{$v["Id"]}\" value=\"{$v["Id"]}\"/>\n";
			$html .= "<label for=\"servicesAdminPanelCuNew_{$v["Id"]}\"></label>\n";
			$html .= "{$v["Category"]}\n";
			if( array_key_exists('children',$v)){
				$html .= toCheckBoxes($v['children']);     
			}
			$html .= "</li>\n";
		}   
		$html .= "</ul>\n";   
		return $html; 
	}
	
	function GetServices(){
		$refs   = array();
		$list   = array();
		$sql    = "SELECT Id, Parent_Id, Category FROM BusinessServiceCategory ORDER BY Category";
		$result = mysql_query($sql);
		while($row = mysql_fetch_assoc($result)){
			$thisref = &$refs[ $row['Id'] ];
			$thisref['Id'] = $row['Id'];
			$thisref['Parent_Id'] = $row['Parent_Id'];
			$thisref['Category'] = $row['Category'];
			if ($row['Parent_Id'] == 0) 
				$list[] = &$thisref;
			else
				$refs[$row['Parent_Id']]['children'][] = &$thisref;
		}
		return(toCheckBoxes($list,false));
	}


	function GetMunicipality(){
		$sql =     "SELECT Id,Name FROM Sweden_LanKommuner S WHERE Parent_Id <> 0 ORDER BY Name ASC";
		$result    = mysql_query($sql);
		$list_html = "";
		$rows      = 0;
		$cols      = 0;
		$total     =  mysql_num_rows($result);
		while($row = mysql_fetch_assoc($result)){
			if($cols == 0){
				$list_html .= "<div style=\"position:relative;float:left;width:105px\">\n";
			}
			
			$list_html .= "\t<div style=\"position:relative;float:left;width:110px\">\n";
			$list_html .= "\t\t<input class=\"priside-checkbox\" type=\"checkbox\" id=\"municipalityAdminPanelCuNew_{$row["Id"]}\" value=\"{$row["Id"]}\"/>\n";
			$list_html .= "\t\t<label for=\"municipalityAdminPanelCuNew_{$row["Id"]}\"></label>\n";
			$list_html .= "{$row["Name"]}\n";
			$list_html .= "\t</div>\n";
			
			$rows++;
			$cols++;
			
			if($cols == floor($total / 2)){
				$list_html .= "</div>\n";
				$cols = 0;
			}
			if($rows == $total ){
				$list_html .= "</div>\n";
			}
		}
		mysql_free_result($result);
		return $list_html;
	}

	function GetClassication(){
		//get all the enum values of table Business and column Classification
		$sql       = "SELECT COLUMN_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'Business' AND COLUMN_NAME = 'Classification'";
		$result    = mysql_query($sql);
		$list_html = "";
		while($row = mysql_fetch_assoc($result)){
			//parse the values
			preg_match('/enum\((.*)\)$/', $row["COLUMN_TYPE"], $matches);
			//store it in an array
			$enums = explode(',', $matches[1]);
			//use index so that even if the string has change, we will still have the correct value
			foreach($enums as $index => $enum){
				//display only valid enums (length > 0)
				$enum = ucwords(str_replace("'","",$enum));
				if($enum != ""){
					$list_html .= "<li id=\"classification_".$enum."\" value=\"".($index + 1)."\" onclick=\"displaySelectedItem('div_org_itemsAdminPanelCuNew', 'spn_organizationAdminPanelCuNew', '".$enum."');setSelectedClassification('".($index + 1)."');\">".$enum."</li>\n";
				}
			}
		}
		mysql_free_result( $result );
		return $list_html;
	}	
	include( "inc_admin_panel_cu_new.html" );
	return;
?>