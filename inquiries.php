<?php
	require_once( $_SERVER['DOCUMENT_ROOT']."/libs/verify_session.php" );
	require_once( $_SERVER['DOCUMENT_ROOT']."/translations/inquiries.php" );
	require_once( $_SERVER['DOCUMENT_ROOT']."/libs/messagelib.php" );
	require_once( $_SERVER['DOCUMENT_ROOT']."/libs/constants.php" );

	//db
	include_once( $_SERVER['DOCUMENT_ROOT']."/libs/db_common.php" );

	$ErrMsg = "";
	$OkMsg  = "";


	// Variables for file upload.
	$AttachmentFileName = 'temp_replyAttachment';
	$AttachmentFileFullPath = $_SESSION['User']['UploadPath']."/".$AttachmentFileName;
	$SavePath           = base64_encode($AttachmentFileFullPath).',CheckSum='.CheckSum(base64_encode($AttachmentFileFullPath)).',Session='.session_id();


	if("loadInquiries" == $ajaxRequest){
		//========================================================================
		//=
		//= LOAD INQUIRIES
		//=   Loads and display existing inquiries.
		//=
		//=   Inquiries created by users belonging to the same account as the
		//=   current user are never returned.
		//
		//=   The inquiries to load can be selected by specifying which business
		//=   category ids and/or which area they should belong to.
		//=
		//= TODO: Now we always load all inquiries even though we are only
		//=       interested in those on the current page. When we later change
		//=       page we reload all inquiries again. Not efficient.
		//= ----------------------------------------------------------------------
		//= Parameters:
		//=   ajaxRequest                : "loadInquiries",                 (string)
		//=   classificationIds          : (array of integers)
		//=   businessServiceCategoryIds : (array of integers)
		//=                                Array of business service category ids
		//=                                that the inquiry must match.
		//=                                Inquiries that don't match any of these
		//=                                id's aren't loaded.
		//=   sweden_LanKommunerIds      : sweden_LanKommunerIds,      (array)
		//=   records                    : Number or inquiries to show per page. (integer)
		//=   page                       : Which inquiry page to show.   (integer)
		//=   checksum                   : checksum                    (checksum generated by the server)
		//========================================================================

		// NOTE: Make sure this horrible code creates inquiries the same way as reloadInquiry.

		// sanity checks on variables
		if(!VerifyCheckSum($records.$page,$checksum)){
			$ErrMsg = "CheckSum Error @ ".__LINE__;
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}
		db_connect();

		//paging variables
		$records   = isset($records) ? $records : 20;
		$page      = isset($page)    ? $page    : 1;
		$offset    = ($page - 1) * $records;

		$sql_count = "
			SELECT
				COUNT(SR.Id)
			FROM User U
				INNER JOIN ServiceRequest SR ON U.Id = SR.User_Id
				INNER JOIN BusinessServiceCategory BSC ON SR.BusinessServiceCategory_Id = BSC.Id
				INNER JOIN Sweden_LanKommuner SL ON SR.Sweden_LanKommuner_Id = SL.Id
			WHERE
				U.Account_Id <> ".$_SESSION['User']['AccountId']." AND
				SR.Id NOT IN (
					SELECT ServiceRequest_Id
					FROM MyViewDeletedServiceRequests
					WHERE ServiceRequest_Id = SR.Id
					AND User_Id = ".$_SESSION['User']['Id']."
				)";
		$sql_count.= appendConditions($classificationIds, $businessServiceCategoryIds, $sweden_LanKommunerIds);
		$result    = mysql_query($sql_count);
		if (!$result) {
			$ErrMsg = "Database Error @ ".__LINE__;
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}
		$count     = mysql_fetch_row($result);
		mysql_free_result($result);
		$total_pages = ceil((int)$count[0] / $records);

      // TODO: Force these to integers!
		$classificationIds          = isset($classificationIds)          ? mysql_real_escape_string($classificationIds) : "";
		$businessServiceCategoryIds = isset($businessServiceCategoryIds) ? mysql_real_escape_string($businessServiceCategoryIds) : "";
		$sweden_LanKommunerIds      = isset($sweden_LanKommunerIds)      ? mysql_real_escape_string($sweden_LanKommunerIds)      : "";

		// Table abbreviations:
		//   SR = The service request
		//   U  = User that created the service request
		// Columns returned by below SQL statement:
		//   ReplyCount:   Number of replies that has been made (by anyone) to this request.
		//   HaveReplied:  0 if current user hasn't replied to the request.
		//                 >0 if current user has replied to the request.
		$sql = "
				SELECT
					U.Id,
					SR.Id AS Request_Id,
					CONCAT_WS(' ',U.FirstName,U.LastName) AS Creator_FullName,
					U.Email AS Creator_Email,
					U.Phone AS Creator_Phone,
					SL.name AS Place,
					BSC.Category AS Service,
					SR.DateCreated AS Date,
					SR.Status AS Status,
					SR.ServiceIsFor AS Classification,
					SR.Description AS Description,
					SR.ServiceNeededWhen AS ServiceNeededWhen,
					(SELECT COUNT(SRR.Id) FROM ServiceRequestReplies AS SRR WHERE SR.Id = SRR.ServiceRequest_Id) AS ReplyCount,
					(SELECT COUNT(SRR2.Id)
						FROM ServiceRequestReplies AS SRR2, User U2
						WHERE SRR2.Replier_Id = U2.Id
						AND U2.Account_Id = ".$_SESSION["User"]["AccountId"]."
						AND SRR2.ServiceRequest_Id = SR.Id) AS HaveReplied
				FROM
					User U INNER JOIN ServiceRequest SR ON U.Id = SR.User_Id AND U.Account_Id <> ".$_SESSION['User']['AccountId']."
					INNER JOIN BusinessServiceCategory BSC ON SR.BusinessServiceCategory_Id = BSC.Id
					INNER JOIN Sweden_LanKommuner SL ON SR.Sweden_LanKommuner_Id = SL.Id
				WHERE
					SR.Status = 'published' AND
					SR.Id NOT IN (
						SELECT ServiceRequest_Id
						FROM MyViewDeletedServiceRequests
						WHERE ServiceRequest_Id = SR.Id
						AND User_Id = ".$_SESSION['User']['Id']."
						)";
		$sql.= appendConditions($classificationIds, $businessServiceCategoryIds, $sweden_LanKommunerIds);
		$sql.= "
				ORDER BY
					SR.DateCreated Desc
				LIMIT
					$offset,$records
			   ";
		$result = mysql_query($sql);

		if(0 != mysql_errno()){
			$ErrMsg = "Query Error @ ".__LINE__." ". mysql_error();
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}

		ob_start(); // Output buffer to prevent immediate output.
		$rowNum = 0;
      while($row = mysql_fetch_assoc($result)) {
         $row['Files'] = getInquiryFiles($row['Request_Id']);
			$rowNum+=1;
			$rowType = $rowNum % 2 == 0 ? "even" : "odd";
			include("inc_inquiries_rowSnippet.html");
		}
		mysql_free_result($result);
		$result_data_html = ob_get_contents(); // Get output buffer
		ob_end_clean();

		if(0 != $rowNum){
			print $result_data_html;
		}
		else{
			print "<div style=\"text-align:center;padding-top:5px;color:#E66313;font-weight:bold;\">{$trans["inquiries_no_matches"]}</div>";
		}
		exit(0);

	} else if("reloadInquiry" == $ajaxRequest){
		//========================================================================
		//=
		//= RELOAD INQUIRY
		//=   Reloads a single inquiry.
		//=   Requires that the inquiry is already visible on the page.
		//=
		//= ----------------------------------------------------------------------
		//= Parameters:
		//=   ajaxRequest    : "reloadInquiry"                (string)
		//=   inquiryId      : id of the inquiry to reload    (integer)
		//=	creatorId      : id of inquiry creator          (integer)
		//=	checksum       : checksum of inquiryId, creatorId and user id
		//========================================================================

		// NOTE: Make sure this horrible code creates inquiries the same way as loadInquiries.

		// sanity checks on variables
		if(!VerifyCheckSum(array($inquiryId, $creatorId, $_SESSION['User']['Id']),$checksum)){
			$ErrMsg = "CheckSum Error @ ".__LINE__;
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}

		$inquiryId = (int)$inquiryId;
		$creatorId = (int)$creatorId;

		db_connect();

		// Columns returned by below SQL statement:
		//   ReplyCount:   Number of replies that has been made (by anyone) to this request.
		//   HaveReplied:  0 if current user hasn't replied to the request.
		//                 >0 if ucrrent user has replied to the request.
		$sql = "
				SELECT
					U.Id,
					SR.Id AS Request_Id,
					CONCAT_WS(' ',U.FirstName,U.LastName) AS Creator_FullName,
					U.Email AS Creator_Email,
					U.Phone AS Creator_Phone,
					SL.name AS Place,
					BSC.Category AS Service,
					SR.DateCreated AS Date,
					SR.Status AS Status,
					SR.ServiceIsFor AS Classification,
					SR.Description AS Description,
					SR.ServiceNeededWhen AS ServiceNeededWhen,
					(SELECT COUNT(SRR.Id) FROM ServiceRequestReplies AS SRR WHERE SR.Id = SRR.ServiceRequest_Id) AS ReplyCount,
					(SELECT COUNT(SRR2.Id)
						FROM ServiceRequestReplies AS SRR2
						WHERE SRR2.Replier_Id = ".$_SESSION["User"]["Id"]."
						AND SRR2.ServiceRequest_Id = SR.Id) AS HaveReplied
				FROM
					User U INNER JOIN ServiceRequest SR ON U.Id = SR.User_Id
					INNER JOIN BusinessServiceCategory BSC ON SR.BusinessServiceCategory_Id = BSC.Id
					INNER JOIN Sweden_LanKommuner SL ON SR.Sweden_LanKommuner_Id = SL.Id
				WHERE SR.Id = ".$inquiryId;
		$result = mysql_query($sql);

		if(0 != mysql_errno()){
			$ErrMsg = "Query Error @ ".__LINE__." ". mysql_error();
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}

		ob_start();
		$rowNum = 0;
		$records = -1; // Ugly hack to avoid paging to be written again.
		$count = array(-1);
		while($row = mysql_fetch_assoc($result)){
         $row['Files'] = getInquiryFiles($row['Request_Id']);
			$rowType = "odd"; // Doesn't really matter.
			include("inc_inquiries_rowSnippet.html");
		}
		mysql_free_result($result);
		$result_data_html = ob_get_contents();
		ob_end_clean();

		print $result_data_html;

		exit(0);

	} else if("replyToInquiry" == $ajaxRequest) {
		//========================================================================
		//=
		//= REPLY TO INQUIRY
		//=   Stores a request/inquiry reply from current user.
		//=
		//= TODO: Verify that user is allowed to reply to requests!
		//= TODO: Only allow 4 users to reply to a request!
		//=
		//= ----------------------------------------------------------------------
		//= Parameters:
		//=   ajaxRequest  : "replyToInquiry",               (string)
		//=   inquiryId    : id of inquiry to reply to       (integer)
		//=   creatorId    : id of inquiry creator           (integer)
		//=   checksum     : (checksum generated by the server)
		//=   message      : text message to send to inquiry creator
		//=   fileName     : name of (optional) attached file.
		//=                  This is the name as presented to the user, not the
		//=                  name of the file on the server.
		//========================================================================

		// sanity checks on variables
		if (!isset($inquiryId) || $inquiryId < 0) {
			$ErrMsg = "Inquiry id Error @ ".__LINE__;
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}

		if(!VerifyCheckSum(array($inquiryId, $creatorId, $_SESSION['User']['Id']), $checksum)){
			$ErrMsg = "CheckSum Error @ ".__LINE__;
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}

		$inquiryId = (int)$inquiryId;
		$creatorId = (int)$creatorId;

		db_connect();

		$message = makeInputSafer($message);
		if (!isset($message) || 0 == strlen($message)) {
			$ErrMsg = $trans['inquiries_replymsg_req'];
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}


		$result = mysql_query("BEGIN");
		if (!$result) {
			header("Status: 400 " . "Database error! @ ".__LINE__);
			exit(0);
		}

		// Verify that user's account hasn't already reply to this inquiry.
		$sql = "
			SELECT COUNT(SRR.Id)
			FROM
				ServiceRequestReplies SRR,
				User U
			WHERE
				SRR.ServiceRequest_Id = ".$inquiryId." AND
				SRR.Replier_Id = U.Id AND
				U.Account_Id = ".$_SESSION['User']['AccountId'];
		$result = mysql_query($sql);
		if (!$result) {
			mysql_query("ROLLBACK");
			$ErrMsg = "Database Error @ ".__LINE__." ". mysql_error();
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}
		$row = mysql_fetch_row($result);
		if ($row && $row[0] > 0) {
			mysql_query("ROLLBACK");
			$ErrMsg = $trans['inquiries_replymsg_already_replied'];
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}

		// Verify that inquiry hasn't reached max replies.
		$sql = "
			SELECT COUNT(SRR.Id)
			FROM
				ServiceRequestReplies SRR
			WHERE
				SRR.ServiceRequest_Id = ".$inquiryId;
		$result = mysql_query($sql);
		if (!result) {
			mysql_query("ROLLBACK");
			$ErrMsg = "Database Error @ ".__LINE__." ". mysql_error();
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}
		$row = mysql_fetch_row($result);
		if ($row && $row[0] > MAX_REPLIES_PER_INQUIRY) {
			mysql_query("ROLLBACK");
			$ErrMsg = $trans['inquiries_replymsg_max_replies'];
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}

		// Send the message.
		$options = array(
			"userId" => $userId,
			"userIdChecksum" => CheckSum($userId),
			"recipientIds" => array($creatorId),
			"inquiryId" => $inquiryId,
			"inquiryIdChecksum" => CheckSum($inquiryId),
			"text" => $message,
			"isSystemNotification" => true, // To override recipient check.
		);
		if (isset($fileName)) {
			$options["files"] = array(array(
				"filenameInServer" => $AttachmentFileName,
				"actualFilename" => $fileName));
		}
		sendMessage($options);

		$sql = "
			INSERT INTO ServiceRequestReplies
				(ServiceRequest_Id, Replier_Id, Date)
			VALUES
				(".$inquiryId.", ".$_SESSION['User']['Id'].", NOW())";
		$result = mysql_query($sql);

		if(0 != mysql_errno()){
			mysql_query("ROLLBACK");
			$ErrMsg = "Query Error @ ".__LINE__." ". mysql_error();
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}


		$result = mysql_query("COMMIT");
		PurgeFiles($AttachmentFileName);
		if (!$result) {
			mysql_query("ROLLBACK");
			header("Status: 400 " . "Database error! @ ".__LINE__);
			exit(0);
		}
		
		exit(0);
	} else if("deleteInquiry" == $ajaxRequest) {
		//========================================================================
		//=
		//= DELETE INQUIRY FROM VIEW
		//=   Deletes an inquiry from current user's view.
		//
		//=   After this function is called the inquiry won't show up in the
		//=   user's list of inquiries. 
		//=
		//=
		//= ----------------------------------------------------------------------
		//= Parameters:
		//=   ajaxRequest  : "replyToInquiry",               (string)
		//=   inquiryId    : id of inquiry to reply to       (integer)
		//=   checksum     : checksum of inquiryId and user is
		//========================================================================

		// sanity checks on variables
		if (!isset($inquiryId) || $inquiryId < 0) {
			$ErrMsg = "Inquiry id Error @ ".__LINE__;
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}

		if(!VerifyCheckSum(array($inquiryId, $_SESSION['User']['Id']), $checksum)){
			$ErrMsg = "CheckSum Error @ ".__LINE__;
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}

		$inquiryId = (int)$inquiryId;

		db_connect();

		$sql = "
			INSERT INTO MyViewDeletedServiceRequests
				(User_Id, ServiceRequest_Id, DeletedDate)
			VALUES
				(".$_SESSION['User']['Id'].",".$inquiryId.",  NOW())";
		$result = mysql_query($sql);

		if(0 != mysql_errno()){
			$ErrMsg = "Query Error @ ".__LINE__." ". mysql_error();
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}
		exit(0);
   } else if ("deleteReplyAttachment" == $ajaxRequest) {
		//========================================================================
		//=
		//= DELETE REPLY ATTACHMENT
		//=   Deletes the file uploaded to ther server as part of an not yet sent
		//=   inquiry reply.
		//=
		//=
		//= TODO: If we get a PHP error caller seems to get a success response!
		//= ----------------------------------------------------------------------
		//= Parameters:
		//=   ajaxRequest          : "deleteReplyAttachment"             (string)
		//========================================================================
		PurgeFiles($AttachmentFileName);
		exit(0);
   } else if("loadSearchFilters" == $ajaxRequest) {
		//========================================================================
		//=
		//= LOAD SEARCH FILTERS
      //=   Returns a JSON object with the service request/inquiry search filters
      //=   belonging to current user.
      //=
      //=   Filters are sorted by name.
		//=
		//=
		//= TODO: If we get a PHP error caller seems to get a success response!
		//= ----------------------------------------------------------------------
		//= Parameters:
		//=   ajaxRequest          : "loadSearchFilters"             (string)
		//=   checksum             : Checksum of user id. (string)
		//========================================================================

      $ErrMsg = "";

		if(!VerifyCheckSum(array($_SESSION['User']['Id']),$checksum)){
			$ErrMsg = "CheckSum Error @ ".__LINE__;
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}

		db_connect();

		$sql = "
         SELECT Id, Name, Classification_Ids, ServiceCategory_Ids, Sweden_LanKommuner_Ids
         FROM SaveSearchFilters
         WHERE User_Id = ".$_SESSION['User']['Id']."
         ORDER BY Name";
		$result = mysql_query($sql);

		if(0 != mysql_errno()){
			$ErrMsg = "Query Error @ ".__LINE__." ". mysql_error();
			header("Status: 400 " . $ErrMsg ); // TODO: Fix error handling.
			exit(0);
		}

		$filters = array();
		while($row = mysql_fetch_assoc($result)){
         $filters[] = $row;
		}
		mysql_free_result($result);

      print json_encode(array('filters'=>$filters));

		exit(0);
	} // End loadSearchFilters
	else if("saveSearchFilter" == $ajaxRequest) {
		//========================================================================
		//=
		//= SAVE SEARCH FILTER
		//=   Saves a service request search filter belonging to current user.
		//=
		//=   Old filters will be overwritten if filterName matches an existing
		//=   filter belonging to the current user.
		//=
		//= TODO: Safety check variable contents (decode etc)!
		//= TODO: If we get a PHP error caller seems to get a success response!
		//= ----------------------------------------------------------------------
		//= Parameters:
		//=   ajaxRequest          : "saveSearchFilter"             (string)
		//=   filterName           : name of filter (string)
		//=   classificationIds    : comma separated list of classification ids
		//=                          (string)
		//=   categoryIds          : comma separated list of category ids (string)
		//=   lanKommunerIds          : comma separated list of location ids (string)
		//=                          These refer to the Sweden_LanKommuner
		//=   checksum             : Checksum of user id. (string)
		//========================================================================

		// Check user input variables
		$inputVariablesOK = true;
		$ErrMsg = "";

		$filterName = makeInputSafer($filterName);
		if (!isset($filterName) || strlen($filterName) < 1) {
			$inputVariablesOK = false;
		}

		$classificationIds = makeInputSafer($classificationIds);
		$categoryIds = makeInputSafer($categoryIds);
		$lanKommunerIds = makeInputSafer($lanKommunerIds);

		if(!VerifyCheckSum(array($_SESSION['User']['Id']),$checksum)){
			$inputVariablesOK = false;
			$ErrMsg .= "CheckSum Error @ ".__LINE__."<br />";
		}

		if(!$inputVariablesOK) {
			header("Status: 400 " . $ErrMsg );
			exit(0);
		}

		db_connect();

		// Check if we have a filter with supplied name already.
		$sql = "SELECT Id, Name FROM SaveSearchFilters
			WHERE Name = '".$filterName."' AND User_Id = ".$_SESSION['User']['Id'];
		$result = mysql_query($sql);

		if(0 != mysql_errno()){
			$ErrMsg = "Query Error @ ".__LINE__." ". mysql_error();
			header("Status: 400 " . $ErrMsg ); // TODO: Fix error handling.
			exit(0);
		}

		$existingFilterId = -1;
		if ($row = mysql_fetch_assoc($result)) {
			$existingFilterId = $row['Id'];
		}

		if (-1 !== $existingFilterId) {
			// Update existing filter.
			$sql = "
				UPDATE SaveSearchFilters
				SET Name = '".$filterName."',
					Classification_Ids = '".$classificationIds."',
					ServiceCategory_Ids = '".$categoryIds."',
					Sweden_LanKommuner_Ids = '".$lanKommunerIds."'
				WHERE Id = ".$existingFilterId;
			$result = mysql_query($sql);

			if(0 != mysql_errno()){
				$ErrMsg = "Query Error @ ".__LINE__." ". mysql_error();
				header("Status: 400 " . $ErrMsg ); // TODO: Fix error handling.
				exit(0);
			}
		} else {
			// Filter didn't exist. Create new.
			$sql = "
				INSERT INTO SaveSearchFilters(Name, User_Id, Classification_Ids, ServiceCategory_Ids, Sweden_LanKommuner_Ids)
				VALUES('".$filterName."', ".$_SESSION['User']['Id'].",
					'".$classificationIds."', '".$categoryIds."', '".$lanKommunerIds."')";
			$result = mysql_query($sql);

			if(0 != mysql_errno()){
				$ErrMsg = "Query Error @ ".__LINE__." ". mysql_error();
				header("Status: 400 " . $ErrMsg ); // TODO: Fix error handling.
				exit(0);
			}
		}

		exit(0);
	} // End saveSearchFilter
	else if("deleteSearchFilter" == $ajaxRequest) {
		//========================================================================
		//=
		//= DELETE SEARCH FILTER
		//=   Deletes a search filter.
      //=
      //=   Filter will only be deleted if it belongs to the current logged in
      //=   user.
      //=
		//= TODO: Safety check variable contents (decode etc)!
		//= TODO: If we get a PHP error caller seems to get a success response!
		//= ----------------------------------------------------------------------
		//= Parameters:
      //=   ajaxRequest          : "deleteSearchFilter"             (string)
      //=   filterId             : database id of filter (integer)
		//=   checksum             : Checksum of user id. (string)
		//========================================================================

      // Check user input variables
      $inputVariablesOK = true;
      $ErrMsg = "";

      if (!isset($filterId) || $filterId < 0) {
         $inputVariablesOK = false;
      }

		if(!VerifyCheckSum(array($_SESSION['User']['Id']),$checksum)){
         $inputVariablesOK = false;
			$ErrMsg .= "CheckSum Error @ ".__LINE__."<br />";
		}

      if(!$inputVariablesOK) {
			header("Status: 400 " . $ErrMsg );
			exit(0);
      }

		db_connect();

		$sql = "
         DELETE FROM SaveSearchFilters
         WHERE Id = ".$filterId." AND User_Id = ".$_SESSION['User']['Id'];
		$result = mysql_query($sql);

		if(0 != mysql_errno()){
			$ErrMsg = "Query Error @ ".__LINE__." ". mysql_error();
			header("Status: 400 " . $ErrMsg ); // TODO: Fix error handling.
			exit(0);
		}

		exit(0);
	} // End deleteSearchFilter


	/**
	 * Appends search filters to a query.
	 *
	* @param classificationIds
	* @param businessServiceCategoryIds
	* @param sweden_LanKommunerIds
	*
	* @return a string with SQL statements for verifying that the ids are in the
	*         selected service request.
	*         The statement will begin with " AND".
	*         The statement assumes that the selected ServiceRequest is referred
	*         to as SR.
	*/
	function appendConditions($classificationIds, $businessServiceCategoryIds, $sweden_LanKommunerIds){
		//TODO: THIS CODE IS OPEN FOR SQL INJECTION! NOWHERE DO WE MAKE SURE THAT THESE ARE INTEGERS!
		$sql = "";

		if(!empty($classificationIds)){
			$sql .= " AND SR.ServiceIsFor IN ($classificationIds)";
		}

		if(!empty($businessServiceCategoryIds)){
			$sql .= " AND SR.BusinessServiceCategory_Id IN ($businessServiceCategoryIds)";
		}

		if(!empty($sweden_LanKommunerIds)){
			$sql .= " AND SR.Sweden_LanKommuner_Id IN ($sweden_LanKommunerIds)";
		}
		return $sql;
	}

	/**
	 * Makes a string input variable safer.
	 *
	 * Strips html tags, converts characters to html entities.
	 * Assumes encoding is UTF-8.
	 *
	 * @return The adjusted string. May be an empty string!
	 */
	function makeInputSafer($input) {
		$input = htmlentities($input, ENT_QUOTES, 'UTF-8');
		$input = strip_tags($input);
		//$input = mysql_real_escape_string($input); // TODO: use this?
		return $input;
	}


   /**
    * Get an array of files attached to an inquiry.
    *
    * @param inquiryId  Id of the inquiry whos files we want.
    *
    * @return An array with each entry representing one file.
    *         Each entry is an associative array of the form:
    *         "name" => <name of file>,
    *         "idAndChecksum" => <string of the form "<fileId>:<CheckSum(fileId)>",
    *         e.g. "123:72347ca6234ca".
    */
   function getInquiryFiles($inquiryId) {
      $sql = "
         SELECT
            F.Id AS Id,
            F.Name AS Name
         FROM ServiceRequestFiles SRF, Files F
         WHERE
            SRF.ServiceRequest_Id = ".$inquiryId." AND
            SRF.File_Id = F.Id";
      $result = mysql_query($sql);
      if (!$result) {
         return;
      }

      $files = array();
      while ($row = mysql_fetch_assoc($result)) {
         $files[] = array('name' => $row['Name'], 'idAndChecksum' => $row['Id'].':'.CheckSum($row['Id']));
      }

      mysql_free_result($result);
      return $files;
   }



	include( "inc_inquiries.html" );
	return;
?>



<?php
	// TODO: This code is view code and shouldn't be in this (inquires.php) file
	//       as this file is more of a model/controller file!

	// Code to substring while counting html entities as just one character.
	// Copied from user comment at: http://www.php.net/manual/en/function.substr.php
	function html_strlen($str) {
		$chars = preg_split('/(&[^;\s]+;)|/', $str, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);
		return count($chars);
	}

	function html_substr($str, $start, $length = NULL) {
		if ($length === 0) return ""; //stop wasting our time ;)

		//check if we can simply use the built-in functions
		if (strpos($str, '&') === false) { //No entities. Use built-in functions
			if ($length === NULL)
				return substr($str, $start);
			else
				return substr($str, $start, $length);
		}

		// create our array of characters and html entities
		$chars = preg_split('/(&[^;\s]+;)|/', $str, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_OFFSET_CAPTURE);
		$html_length = count($chars);

		// check if we can predict the return value and save some processing time
		if (
			($html_length === 0) /* input string was empty */ or
			($start >= $html_length) /* $start is longer than the input string */ or
			(isset($length) and ($length <= -$html_length)) /* all characters would be omitted */
		)
			return "";

		//calculate start position
		if ($start >= 0) {
			$real_start = $chars[$start][1];
		} else { //start'th character from the end of string
			$start = max($start,-$html_length);
			$real_start = $chars[$html_length+$start][1];
		}

		if (!isset($length)) // no $length argument passed, return all remaining characters
			return substr($str, $real_start);
		else if ($length > 0) { // copy $length chars
			if ($start+$length >= $html_length) { // return all remaining characters
				return substr($str, $real_start);
			} else { //return $length characters
				return substr($str, $real_start, $chars[max($start,0)+$length][1] - $real_start);
			}
		} else { //negative $length. Omit $length characters from end
			return substr($str, $real_start, $chars[$html_length+$length][1] - $real_start);
		}
	}

?>
